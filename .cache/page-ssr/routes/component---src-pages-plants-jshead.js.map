{"version":3,"file":"component---src-pages-plants-jshead.js","mappings":"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","sources":["webpack://my-portfolio/my-greens/./src/components/Column.jsx","webpack://my-portfolio/my-greens/./src/components/ColumnContainer.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Button.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Column.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Footer.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Global.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Header.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Modal.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Plant.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Site.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Typography.styles.jsx","webpack://my-portfolio/my-greens/./src/components/CustomStyles/Wrapper.styles.jsx","webpack://my-portfolio/my-greens/./src/components/Footer.jsx","webpack://my-portfolio/my-greens/./src/components/Forms/userInput.jsx","webpack://my-portfolio/my-greens/./src/components/Header.jsx","webpack://my-portfolio/my-greens/./src/components/Modal.jsx","webpack://my-portfolio/my-greens/./src/components/SubmittedData.jsx","webpack://my-portfolio/my-greens/./src/components/Wrapper.jsx","webpack://my-portfolio/my-greens/./src/pages/plants.js","webpack://my-portfolio/my-greens/./src/images/footer-background.png","webpack://my-portfolio/my-greens/./src/images/logo-greens.png"],"sourcesContent":["import React from 'react'\n\nconst Column = ({ children, extraClass }) => {\n  return <div className={`column ${extraClass}`}>{children}</div>\n}\n\nexport default Column\n","import React from 'react'\nimport Column from '../components/Column'\n\nconst ColumnContainer = ({ children, extraClass }) => {\n  return <div className={`column-container ${extraClass}`}>{children}</div>\n}\n\nexport default ColumnContainer\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\nimport FooterBg from '../../images/footer-background.png'\n\nconst ButtonStyles = () => (\n  <Global\n    styles={css`\n      button {\n        all: unset;\n        appearance: none;\n        background: none;\n        border: none;\n        padding: 0;\n        margin: 0;\n        box-sizing: border-box;\n        font: inherit;\n        color: inherit;\n        cursor: pointer;\n      }\n\n      .add-plant-button {\n        position: absolute;\n        right: 0;\n        top: 35px;\n        font-family: 'adlery-pro', sans-serif;\n        font-weight: 400;\n        font-style: normal;\n        font-size: 35px;\n        transform: rotate(35deg);\n        text-shadow: 5px 8px 6px rgba(0, 0, 0, 0.8);\n        background: linear-gradient(#ee600f, #066d11, #0281b1);\n        border-radius: 15px;\n        padding: 10px;\n        box-shadow: 0 8px 15px rgba(0, 0, 0, 0.8);\n\n        @media screen and (max-width: 768px) {\n          transform: unset;\n          top: 10px;\n          right: 20px;\n          font-size: 18px;\n        }\n      }\n    `}\n  />\n)\n\nexport default ButtonStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst ColumnStyles = () => (\n  <Global\n    styles={css`\n      .column-container:not(.new-plants) {\n        display: grid;\n        grid-template-columns: repeat(3, minmax(200px, 1fr));\n        gap: 25px;\n\n        @media (max-width: 768px) {\n          display: flex;\n          overflow-x: scroll;\n          scroll-snap-type: x mandatory;\n          -webkit-overflow-scrolling: touch;\n          -ms-overflow-style: none;\n          scrollbar-width: none;\n\n          .column {\n            flex: 0 0 auto;\n            width: 80%;\n\n            &::first-of-type {\n              margin-left: 20px;\n            }\n          }\n\n          &::-webkit-scrollbar {\n            display: none;\n          }\n        }\n      }\n    `}\n  />\n)\n\nexport default ColumnStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\nimport FooterBg from '../../images/footer-background.png'\n\nconst FooterStyles = () => (\n  <Global\n    styles={css`\n      .footer {\n        height: 75px;\n        bottom: 0;\n        background-image: url('${FooterBg}');\n        background-size: cover;\n        background-position: bottom;\n      }\n    `}\n  />\n)\n\nexport default FooterStyles\n","import React from 'react'\nimport SiteStyles from './Site.styles'\nimport HeaderStyles from './Header.styles'\nimport FooterStyles from './Footer.styles'\nimport WrapperStyles from './Wrapper.styles'\nimport TypographyStyles from './Typography.styles'\nimport ColumnStyles from './Column.styles'\nimport PlantStyles from './Plant.styles'\nimport ModalStyles from './Modal.styles'\nimport ButtonStyles from './Button.styles'\n\nconst BaseStyles = () => (\n  <>\n    <SiteStyles />\n    <HeaderStyles />\n    <WrapperStyles />\n    <TypographyStyles />\n    <ButtonStyles />\n    <ModalStyles />\n    <ColumnStyles />\n    <PlantStyles />\n    <FooterStyles />\n  </>\n)\n\nexport default BaseStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst HeaderStyles = () => (\n  <Global\n    styles={css`\n      .header {\n        margin-top: 20px;\n        border-bottom: 2px solid white;\n        width: 100%;\n        display: flex;\n        justify-content: space-around;\n\n        a {\n        }\n      }\n\n      .navigation {\n        margin-top: 20px;\n        display: flex;\n        align-items: center;\n        position: relative;\n        justify-content: space-between;\n        width: 100%;\n        max-width: 1200px;\n\n        .column {\n          width: 50%;\n          display: flex;\n          padding: 0 20px 20px;\n          justify-content: center;\n\n          @media screen and (max-width: 768px) {\n            &:first-child {\n              justify-content: flex-start;\n            }\n\n            &:last-child {\n              justify-content: flex-end;\n            }\n          }\n        }\n\n        a {\n          color: white;\n          text-decoration: none;\n          font-size: 40px;\n\n          @media screen and (max-width: 540px) {\n            font-size: 30px;\n          }\n        }\n      }\n\n      .logo {\n        position: absolute;\n        top: 110%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        max-width: 225px;\n        display: block;\n\n        img {\n          width: 100%;\n        }\n\n        @media screen and (max-width: 540px) {\n          max-width: 150px;\n        }\n      }\n    `}\n  />\n)\n\nexport default HeaderStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst ModalStyles = () => (\n  <Global\n    styles={css`\n      .modal-overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.7);\n        display: flex;\n        justify-content: center;\n        align-items: flex-start;\n        z-index: 1000;\n      }\n\n      .modal-content {\n        background-color: #fff;\n        text-align: center;\n        color: #000;\n        padding: 20px;\n        border-radius: 5px;\n        position: relative;\n        max-width: 300px;\n        width: 100%;\n        margin-top: 100px;\n\n        form {\n          margin-top: 10px;\n          display: flex;\n          flex-direction: column;\n        }\n\n        input {\n          border-radius: 5px;\n          border: 1px solid #a2a2a2;\n          padding: 10px;\n        }\n      }\n\n      .close-button {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        background: none;\n        border: none;\n        font-size: 20px;\n        cursor: pointer;\n      }\n\n      .submit-button {\n        background: radial-gradient(circle, #0281b1, #066d11, #ee600f);\n        padding: 10px;\n        border-radius: 5px;\n        color: white;\n        font-family: 'hippie', sans-serif;\n        font-size: 26px;\n        color: white;\n        text-shadow: 2px 2px 0 #000, -2px -2px 0 #000, 2px -2px 0 #000,\n          -2px 2px 0 #000;\n      }\n\n      .add-plant-modal-title {\n        font-family: 'hippie', sans-serif;\n        font-size: 30px;\n      }\n    `}\n  />\n)\n\nexport default ModalStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst PlantStyles = () => (\n  <Global\n    styles={css`\n      .plant {\n        position: relative;\n        overflow: hidden;\n        border-radius: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 100%;\n        height: 350px;\n\n        @media (min-width: 769px) {\n          box-shadow: 0 8px 15px rgba(0, 0, 0, 0.8);\n\n          &:hover {\n            .plant-info {\n              top: 0;\n              background: rgba(0, 0, 0, 0.8);\n            }\n          }\n        }\n      }\n\n      .plant-image {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n\n        img {\n          display: block;\n          width: 100%;\n          height: 100%;\n          object-fit: cover;\n          transition: filter 0.5s ease;\n        }\n      }\n\n      .plant-info {\n        position: absolute;\n        top: 100%;\n        left: 0;\n        height: 100%;\n        width: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n        color: white;\n        text-align: center;\n        box-sizing: border-box;\n        display: flex;\n        flex-direction: column;\n        transition: top 0.27s ease-in-out;\n        padding: 20px 10px;\n        align-items: center;\n        justify-content: center;\n\n        @media screen and (max-width: 768px) {\n          height: 75%;\n          bottom: 0;\n          top: unset;\n          background: linear-gradient(\n            to bottom,\n            rgba(0, 0, 0, 0) 40%,\n            rgba(0, 0, 0, 0.6) 60%,\n            rgba(0, 0, 0, 0.7) 70%,\n            rgba(0, 0, 0, 0.9) 100%\n          );\n          justify-content: flex-end;\n        }\n      }\n\n      .common-name {\n        font-family: 'flower-power', sans-serif;\n        font-size: 35px;\n        font-weight: 500;\n        font-style: normal;\n        text-align: center;\n\n        @media screen and (max-width: 768px) {\n          font-size: 25px;\n        }\n      }\n\n      .botanical-name {\n        font-style: italic;\n        font-family: 'larken', sans-serif;\n        font-weight: 100;\n        text-align: center;\n        font-size: 20px;\n\n        @media screen and (max-width: 768px) {\n          font-size: 18px;\n        }\n      }\n\n      .new-plants {\n        display: grid;\n        grid-template-columns: repeat(3, minmax(200px, 1fr));\n        gap: 25px;\n\n        @media screen and (max-width: 768px) {\n          display: block;\n        }\n      }\n\n      .new-plant-entry {\n        background-color: white;\n        border-radius: 20px;\n        color: #000;\n        padding: 30px 40px;\n        text-align: left;\n        position: relative;\n        @media screen and (max-width: 768px) {\n          margin-bottom: 20px;\n        }\n      }\n\n      .delete-plant {\n        width: 30px;\n        height: 30px;\n        border-radius: 30px;\n        border: 2px solid black;\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `}\n  />\n)\n\nexport default PlantStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst SiteStyles = () => (\n  <Global\n    styles={css`\n      html,\n      body {\n        background-color: #1c1b1b;\n        color: white;\n        height: 100%;\n        margin: 0;\n        min-height: 100vh;\n      }\n\n      a {\n        text-decoration: none;\n        color: unset;\n      }\n\n      p {\n        margin: 0;\n      }\n    `}\n  />\n)\n\nexport default SiteStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst TypographyStyles = () => (\n  <Global\n    styles={css`\n      body {\n        font-family: 'larken', sans-serif;\n        font-weight: 300;\n        font-style: normal;\n      }\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5,\n      h6 {\n        font-family: 'Hippie', sans-serif;\n      }\n\n      h1 {\n        font-size: 55px;\n        font-weight: 100;\n        text-shadow: -8px 8px 6px rgba(0, 0, 0, 0.8);\n\n        @media screen and (max-width: 540px) {\n          font-size: 35px;\n        }\n      }\n\n      p {\n        font-size: 20px;\n        line-height: 34px;\n      }\n    `}\n  />\n)\n\nexport default TypographyStyles\n","import React from 'react'\nimport { Global, css } from '@emotion/react'\n\nconst WrapperStyles = () => (\n  <Global\n    styles={css`\n      .wrapper {\n        display: grid;\n        grid-template-rows: 1fr auto;\n        max-width: 1200px;\n        margin: 75px auto;\n        padding: 0 20px;\n        position: relative;\n      }\n\n      main {\n        flex: 1;\n      }\n\n      .centered-content {\n        text-align: center;\n        padding: 0 40px;\n\n        @media screen and (max-width: 768px) {\n          padding: 0;\n          text-align: left;\n        }\n      }\n    `}\n  />\n)\n\nexport default WrapperStyles\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <>\n      <div className=\"footer\"></div>\n      <div className=\"test\"></div>\n    </>\n  )\n}\n\nexport default Footer\n","import React, { useState, useEffect } from 'react'\nimport Modal from '../Modal'\nimport SubmittedData from '../SubmittedData'\n\nconst InputDisplay = () => {\n  const [commonPlantName, setCommonPlantName] = useState('')\n  const [botanicalPlantName, setBotanicalPlantName] = useState('')\n  const [image, setImage] = useState(null) // Initialize as null\n  const [imagePreview, setImagePreview] = useState('')\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [submittedData, setSubmittedData] = useState([])\n\n  // Load data from localStorage on component mount\n  useEffect(() => {\n    const storedData = localStorage.getItem('submittedData')\n    if (storedData) {\n      setSubmittedData(JSON.parse(storedData))\n    }\n  }, [])\n\n  // Save data to localStorage whenever submittedData changes\n  useEffect(() => {\n    if (submittedData.length > 0) {\n      localStorage.setItem('submittedData', JSON.stringify(submittedData))\n    }\n  }, [submittedData])\n\n  const handleChange = (event) => {\n    const { name, type, files } = event.target\n    if (type === 'file') {\n      const file = files[0]\n      if (file) {\n        setImage(file)\n        const reader = new FileReader()\n        reader.onloadend = () => {\n          setImagePreview(reader.result)\n        }\n        reader.readAsDataURL(file)\n      }\n    } else {\n      if (name === 'commonPlantName') setCommonPlantName(event.target.value)\n      if (name === 'botanicalPlantName')\n        setBotanicalPlantName(event.target.value)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    // Ensure imageURL is only set if image exists\n    const imageURL = image ? URL.createObjectURL(image) : ''\n    setSubmittedData((prevData) => [\n      ...prevData,\n      {\n        commonPlantName: commonPlantName,\n        botanicalPlantName: botanicalPlantName,\n        image: imageURL,\n      },\n    ])\n    setCommonPlantName('')\n    setBotanicalPlantName('')\n    setImage(null) // Reset image\n    setImagePreview('') // Reset image preview\n    setIsModalOpen(false)\n  }\n\n  const openModal = () => {\n    setIsModalOpen(true)\n  }\n\n  const closeModal = () => {\n    setIsModalOpen(false)\n  }\n\n  // Function to remove a plant by index\n  const handleRemove = (indexToRemove) => {\n    const updatedData = submittedData.filter(\n      (_, index) => index !== indexToRemove\n    )\n    setSubmittedData(updatedData)\n    localStorage.setItem('submittedData', JSON.stringify(updatedData)) // Update localStorage\n  }\n\n  return (\n    <>\n      <div className=\"add-plant-button\">\n        <button onClick={openModal}>* Add a plant *</button>\n      </div>\n      <div>\n        <div className=\"featured-plants\">\n          <SubmittedData\n            submittedData={submittedData}\n            handleRemove={handleRemove}\n          />\n        </div>\n\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\n          <span className=\"add-plant-modal-title\">Add a Plant</span>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              name=\"commonPlantName\"\n              value={commonPlantName}\n              onChange={handleChange}\n              placeholder=\"Common Plant Name\"\n            />\n            <br />\n            <input\n              type=\"text\"\n              name=\"botanicalPlantName\"\n              value={botanicalPlantName}\n              onChange={handleChange}\n              placeholder=\"Botanical Plant Name\"\n            />\n            <br />\n            <input\n              type=\"file\"\n              name=\"image\"\n              accept=\"image/*\"\n              onChange={handleChange}\n            />\n            <br />\n            {imagePreview && (\n              <img\n                src={imagePreview}\n                alt=\"Preview\"\n                style={{ width: '100px', height: 'auto' }}\n              />\n            )}\n            <br />\n            <button className=\"submit-button\" type=\"submit\">\n              Submit\n            </button>\n          </form>\n        </Modal>\n      </div>\n    </>\n  )\n}\n\nexport default InputDisplay\n","import React from 'react'\nimport logo from '../images/logo-greens.png'\nimport BaseStyles from '../components/CustomStyles/Global.styles'\n\nconst Header = () => {\n  return (\n    <>\n      <BaseStyles />\n      <div className=\"header\">\n        <div className=\"navigation\">\n          <div className=\"column\">\n            <a style={{ fontFamily: 'hippie' }} href=\"/journal\">\n              Journal\n            </a>\n          </div>\n          <a className=\"logo\" href=\"/\">\n            <img src={logo} alt=\"logo\" />\n          </a>\n          <div className=\"column\">\n            <a href=\"/plants\" style={{ fontFamily: 'hippie' }}>\n              Plants\n            </a>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-button\" onClick={onClose}>\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import React from 'react'\nimport Column from './Column'\nimport ColumnContainer from './ColumnContainer'\n\nconst SubmittedData = ({ submittedData, handleRemove }) => {\n  return (\n    <ColumnContainer className=\"column-container\" extraClass=\"new-plants\">\n      {submittedData.map((data, index) => (\n        <Column extraClass=\"new-plant-entry\" key={index}>\n          <p>\n            <strong>Common Plant Name:</strong> {data.commonPlantName}\n          </p>\n          <p>\n            <strong>Botanical Plant Name:</strong> {data.botanicalPlantName}\n          </p>\n          <p>\n            <strong>Image will go here</strong> {data.image}\n          </p>\n          <button className=\"delete-plant\" onClick={() => handleRemove(index)}>\n            x\n          </button>\n        </Column>\n      ))}\n    </ColumnContainer>\n  )\n}\n\nexport default SubmittedData\n","import React from 'react'\nimport Header from '../components/Header'\nimport Footer from '../components/Footer'\n\nconst Wrapper = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <div className=\"wrapper\">{children}</div>\n      <Footer />\n    </>\n  )\n}\n\nexport default Wrapper\n","import * as React from 'react'\nimport InputDisplay from '../components/Forms/userInput'\nimport Wrapper from '../components/Wrapper'\nimport SubmittedData from '../components/SubmittedData'\n\nconst PlantsPage = ({ submittedData }) => {\n  return (\n    <>\n      <Wrapper>\n        <div className=\"centered-content\">\n          <h1>Plantae Meae</h1>\n          <InputDisplay />\n        </div>\n      </Wrapper>\n    </>\n  )\n}\n\nexport default PlantsPage\n\nexport const Head = () => <title>Plantae Meae | myGreens</title>\n","export default \"/static/footer-background-f6e77a46846da012a2e9ef1b13122682.png\";","export default \"/static/logo-greens-c2d3be3cacbf783b4ebed98ea4666fac.png\";"],"names":["React","jsx","___EmotionJSX","Column","children","extraClass","className","ColumnContainer","Global","css","FooterBg","_ref","process","env","NODE_ENV","name","styles","map","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","ButtonStyles","ColumnStyles","FooterStyles","SiteStyles","HeaderStyles","WrapperStyles","TypographyStyles","PlantStyles","ModalStyles","BaseStyles","Fragment","Footer","useState","useEffect","Modal","SubmittedData","InputDisplay","commonPlantName","setCommonPlantName","botanicalPlantName","setBotanicalPlantName","image","setImage","imagePreview","setImagePreview","isModalOpen","setIsModalOpen","submittedData","setSubmittedData","storedData","localStorage","getItem","JSON","parse","length","setItem","stringify","handleChange","event","type","files","target","file","reader","FileReader","onloadend","result","readAsDataURL","value","handleSubmit","preventDefault","imageURL","URL","createObjectURL","prevData","openModal","closeModal","handleRemove","indexToRemove","updatedData","filter","_","index","onClick","isOpen","onClose","onSubmit","onChange","placeholder","accept","src","alt","style","width","height","logo","Header","fontFamily","href","data","key","Wrapper","PlantsPage","Head"],"sourceRoot":""}